//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace web_client.StockQuoteService {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AnnualStockData", Namespace="http://schemas.datacontract.org/2004/07/StockQuote")]
    [System.SerializableAttribute()]
    public partial class AnnualStockData : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string annualReturnField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private web_client.StockQuoteService.MonthlyClose[] monthlyClosingsField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string annualReturn {
            get {
                return this.annualReturnField;
            }
            set {
                if ((object.ReferenceEquals(this.annualReturnField, value) != true)) {
                    this.annualReturnField = value;
                    this.RaisePropertyChanged("annualReturn");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public web_client.StockQuoteService.MonthlyClose[] monthlyClosings {
            get {
                return this.monthlyClosingsField;
            }
            set {
                if ((object.ReferenceEquals(this.monthlyClosingsField, value) != true)) {
                    this.monthlyClosingsField = value;
                    this.RaisePropertyChanged("monthlyClosings");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="MonthlyClose", Namespace="http://schemas.datacontract.org/2004/07/StockQuote")]
    [System.SerializableAttribute()]
    public partial class MonthlyClose : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string nameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string priceField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string name {
            get {
                return this.nameField;
            }
            set {
                if ((object.ReferenceEquals(this.nameField, value) != true)) {
                    this.nameField = value;
                    this.RaisePropertyChanged("name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string price {
            get {
                return this.priceField;
            }
            set {
                if ((object.ReferenceEquals(this.priceField, value) != true)) {
                    this.priceField = value;
                    this.RaisePropertyChanged("price");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="StockQuoteService.IStockQuote")]
    public interface IStockQuote {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockQuote/Stockquote", ReplyAction="http://tempuri.org/IStockQuote/StockquoteResponse")]
        string Stockquote(string symbol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockQuote/Stockquote", ReplyAction="http://tempuri.org/IStockQuote/StockquoteResponse")]
        System.Threading.Tasks.Task<string> StockquoteAsync(string symbol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockQuote/AnnualStockReport", ReplyAction="http://tempuri.org/IStockQuote/AnnualStockReportResponse")]
        web_client.StockQuoteService.AnnualStockData AnnualStockReport(string symbol);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IStockQuote/AnnualStockReport", ReplyAction="http://tempuri.org/IStockQuote/AnnualStockReportResponse")]
        System.Threading.Tasks.Task<web_client.StockQuoteService.AnnualStockData> AnnualStockReportAsync(string symbol);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IStockQuoteChannel : web_client.StockQuoteService.IStockQuote, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class StockQuoteClient : System.ServiceModel.ClientBase<web_client.StockQuoteService.IStockQuote>, web_client.StockQuoteService.IStockQuote {
        
        public StockQuoteClient() {
        }
        
        public StockQuoteClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public StockQuoteClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockQuoteClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public StockQuoteClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Stockquote(string symbol) {
            return base.Channel.Stockquote(symbol);
        }
        
        public System.Threading.Tasks.Task<string> StockquoteAsync(string symbol) {
            return base.Channel.StockquoteAsync(symbol);
        }
        
        public web_client.StockQuoteService.AnnualStockData AnnualStockReport(string symbol) {
            return base.Channel.AnnualStockReport(symbol);
        }
        
        public System.Threading.Tasks.Task<web_client.StockQuoteService.AnnualStockData> AnnualStockReportAsync(string symbol) {
            return base.Channel.AnnualStockReportAsync(symbol);
        }
    }
}
